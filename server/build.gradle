plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.liquibase.gradle' version '2.2.0'
    id 'groovy' // Groovy for testing
    id 'jacoco' // Jacoco for code coverage
    id "org.springdoc.openapi-gradle-plugin" version "1.9.0"
}

group = 'com.mgmtp.cfu'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

// Ensure the versions of dependencies
dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:3.2.1'
    }
}


dependencies {
    // Spring implementation dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.h2database:h2'
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.12.6'
    runtimeOnly 'org.postgresql:postgresql'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
    implementation 'org.modelmapper:modelmapper:3.1.0' // Replace with the latest version if needed
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.12.6'
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    liquibaseRuntime 'org.postgresql:postgresql'
//    implementation 'org.liquibase:liquibase-core'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.3.1'
    implementation 'jaxen:jaxen:1.2.0'
    implementation group: 'org.dom4j', name: 'dom4j', version: '2.1.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.1'
    testImplementation(
			// JUnit
			'junit:junit:4.13.2',

            // Spock
            'org.spockframework:spock-core:2.4-M1-groovy-4.0',
            'org.spockframework:spock-spring:2.4-M1-groovy-4.0',

            // Spring boot test
            'org.springframework.boot:spring-boot-starter-test',
            'com.squareup.okhttp3:mockwebserver:4.9.3',
            'com.squareup.okhttp3:okhttp:4.9.3',
    )
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
}

// Specifying source sets to not run .java test files
sourceSets {
    test{
        java{
            srcDirs = []
        }
        groovy{
            srcDirs = ['src/test/groovy']
        }
    }
}

// Specifying tasks
tasks.named('test'){
    useJUnitPlatform()
    testLogging {
        events "started", "passed", "skipped", "failed"
    }
    finalizedBy 'jacocoTestReport'
}


jacocoTestReport{
    dependsOn 'test'

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/mgmtp/cfu/CourseForYouApplication.class",
                    "com/mgmtp/cfu/dto/*",
                    "com/mgmtp/cfu/entity/*",
                    "com/mgmtp/cfu/enums/*",
                    "com/mgmtp/cfu/repository/*",
                    "com/mgmtp/cfu/config/*",
                    "com/mgmtp/cfu/exception/*",
                    "com/mgmtp/cfu/specification/*",
            ])
        }))
    }

    reports{
        html.required.set(true)
    }
}

jacocoTestCoverageVerification {
    dependsOn 'test'
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/mgmtp/cfu/CourseForYouApplication.class",
                    "com/mgmtp/cfu/dto/*",
                    "com/mgmtp/cfu/entity/*",
                    "com/mgmtp/cfu/enums/*",
                    "com/mgmtp/cfu/repository/*",
                    "com/mgmtp/cfu/config/*",
                    "com/mgmtp/cfu/exception/*",
                    "com/mgmtp/cfu/specification/*",
            ])
        }))
    }
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

tasks.check.dependsOn jacocoTestCoverageVerification
